/********************************************************************* 
This CSS file contains 3 key sections:

1 - Content CSS: to style the content you want to include in each slider
2 - Operational CSS: CSS that controls the fundamental operations of the slider 
3 - Animation CSS: controls the animation effects. Including things like 
    the speed of transitions and direction of transitions.  
***********************************************************************/


/*********************************************************************
1. Content CSS: 

This CSS will be specific to how you want to style your the content that you
include in your sliders. Change it as you need to meet your content styling objectives. 

* To maintain consistency of the height of your sliders, it is recommended
that you give a min-height to each slider (i.e., .sliderContent).

* The slider content can be an image. There are two ways to do that.
1) If you want to super impose text on top your image you will need to add
the image as a background image to "sliderContent" and include the text you 
want to super impose on it directly inside the "sliderContent" div (see sample 
HTML) and it will be super imposed on top of the background image. 
2) If you just want the sliderContent to be an image (ie., no super
imposed text) then simply add the img directly inside the "sliderContent" div.

**Note: When adding images you will want to make sure that the images are
all the same size for aesthetic reasons.  

***********************************************************************/


/* Suggest you specify a height on the sliderContent div to ensure
consistency in the height of your sliders. If you are using images
in your slider for aesthetics you will want to set the min-height 
to match the height of your images. 
*/
.sliderContent {
    background-color: lightgrey;
    min-height: 400px; 
}

h1 {
    padding-left: 1rem;
    color: dodgerblue;
    font-size: 2em;
}
p {
    padding-left: 1rem;
    color: grey;
}

/* Sample assets that can be used. The CSS belows illustrates how these images
could be used as backgroud images...just add appropriate "id" to the sliderContent div
(see sample HTML. Using them as background images will allow you to superimpose text
on top of the background image. Or alternatively e you could just display the image by adding
it to the "sliderContent" div via an image tag. 
*/

#sliderImage1 {
    background-image: url('/images/header1.jpg');
    height: 220px;
 
}
#sliderImage2 {
    background-image: url('/images/header2.jpg');
    height: 220px;
}
#sliderImage3 {
    background-image: url('/images/header3.jpg');
    height: 220px; 
}
/*********************************************************************
2 - Operational CSS:

This CSS controls key operational aspects of the slider. It can be changed
but make sure you know what you are doing before you change it. If you do 
change it test your changes carefully. 

There are several items in this CSS section that you MUST change if you 
want to change the number of sliders that you want to display. I've the word
"CHANGE" as a comment to denote which ones you will need to change and how
to change them.
***********************************************************************/

/* CHANGE: If you want to change the number of sliders you want to display  
The width percentage is derived from the number of "sliders" that you want to 
include. If you want to display 3 sliders then the width percentage would be
300%. For 4 sliders it would be 400%, etc.
*** Note: if you change the width you MUST make corresponding changes 
to the animation CSS for it to all work properly. See notes in that section. 
*/
.sliderContainer .sliderFrame {
    width: 300%;
    position: relative;
}

/* CHANGE: 
The width percentage is derived as follows: 1/(# of sliders).
So if have 3 sliders then the width would be 1/3 or 33.33%.
If you have 4 sliders width=1/4 or 25%, etc. etc.
*** Note: if you change the width you MUST make corresponding changes 
to the animation CSS for it to all work properly. See notes in that section.
*/
.sliderContainer .sliderFrame .sliderContent {
    width: 33.33333%;
    float: left; 
}

/*CHANGE with caveats:
The "wrapper" width parameter controls the display width of your slider. If you are using 
images you will want to set the .wrapper width to match image's width (e.g., 960px) to ensure the image is displayed properly in the the slider. This is especially true if you are using "background-image" to display your image (e.g., image will appear more than once). In the case of non-background images the height of the image may be greater than the non-image sliders. 

If you aren't using images then you can set the width parameter to whatever value you want it to be...either a specific pixel/em or a percentage. 
*/
.wrapper {
    max-width: 1200px;
    width: 100%;
    margin: auto;
}

/* If you include an image directly in your sliderContent div (versus adding it as 
a background image) this CSS will ensure that it fills 100% of the width of 
the slider.  
*/
.sliderFrame img {
	max-width: 100%;        
/*	height:auto;*/
/*    margin: auto;*/
}

.sliderContainer {
    overflow: hidden;
/*
	width: 100%;
	margin: 0 auto;
	background: white;
*/
}

.sliderFrame   {
	padding: 0;

}

.sliderContainer .sliderFrame .sliderContent {
    position:relative;
    float:left;
}

/*************************************************************************
Flexx-slider Animation CSS
If you want to change the number of sliders you must make changes to 
specific parts of the "Operational" CSS (see comments in that section) as 
well as changes in the Animation CSS. The changes that must be made are
noted in the comments by the word  "CHANGE:"

**************************************************************************/

/* CHANGE:
Changing the number of sliders will require that you change the  
sliderFrame width. The width percentange be set based on the following formula:
 width  = (# of images) * 100% 
The animation is currently set to cycle through all of the slider in 10 seconds.
If you have more sliders you may want to increase that "cycle" time. 
*/
.sliderContainer .sliderFrame {
	width:300%;
	-webkit-animation:slideshow 15s infinite ease;
	animation: slideshow 15s infinite ease;
}

/* CHANGE:
Changing the number of sliders will require that you change the sliderContent
width. It's width percentange be set based on the following formula:
   width = 1/ (# of images) e.g., 1/3 = 33.3% 
*/

.sliderContainer .sliderFrame > .sliderContent {
    width:33.3%;
}


/* CHANGE:
The Animation for the slider is set to slide the image to the left. 
If you change the number of sliders you will need to change the
%'s so that it maxes out at: (#images - 1) *-100%. With 3 sliders
you would get (3-1) * 100%. 

To make the "cycle" transition smooth you may also want to ensure
that an equal amount of time is spent on each slide. That is controlled
by the percentages on the left side. If you add more sliders you may
want to add more % increments to ensure that equal time is spent on 
each slider. Ultimately you will still go from 0% to 100%.

see: https://css-tricks.com/infinite-all-css-scrolling-slideshow/ 
http://www.w3schools.com/css/css3_animations.asp for more details.

*/

@-webkit-keyframes slideshow {
    0%		{left:0;}
    20%		{left:0;}
    33%     {left:-100%;}
    66%     {left:-100%;}
    81%     {left:-200%;}
    97%     {left:-200%;}
    100%    {left:-200%;}

}
@keyframes slideshow {
    0%		{left:0;}
    20%		{left:0;}
    33%     {left:-100%;}
    66%     {left:-100%;}
    81%     {left:-200%;}
    97%     {left:-200%;}
    100%    {left:-200%;}
}
